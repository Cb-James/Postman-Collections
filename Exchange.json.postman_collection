{
	"id": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
	"name": "Exchange",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "096e24e0-1ad8-a2f5-0aa8-b10571143f4b",
			"name": "Accounts",
			"description": "",
			"order": [
				"bc711f61-3586-ac36-d1ed-313622f510d0",
				"1b82868c-1fb9-5c82-5496-75e7ea87d071",
				"fc3a42d6-8158-b633-5f7f-f4b2eac1e83f",
				"66ebb64e-c5d4-2b3f-057f-2278a11371a5"
			]
		},
		{
			"id": "2a30862e-475f-c9bc-2a6a-6d0c2ed3eeaa",
			"name": "Fills",
			"description": "",
			"order": [
				"5275b06d-b385-b1af-6495-26e8435c243c"
			],
			"owner": "38528"
		},
		{
			"id": "b3db6f71-fa09-0486-da5e-89a2abafc50f",
			"name": "Market Data",
			"description": "",
			"order": [
				"34b6a7be-1624-899e-5bfb-4db64182c73d",
				"303b0bd6-a739-73bf-2413-d202d2c87bb6",
				"ec63e6dd-e1fe-cea7-b3ee-9d1ee8645e31",
				"5d466211-e2f7-2b1c-6c79-bdda4d835485",
				"02b1b837-325f-d180-12db-35bdca66ea9c",
				"3023474c-77e6-7c71-7f8a-ab8807860ec5",
				"c75a75f3-5742-aacf-16f3-7d6859006080",
				"f53fd213-b9a2-4967-e754-724951027a4d"
			],
			"owner": "38528"
		},
		{
			"id": "f12d3395-2a60-8371-6c36-675df5bbd4c9",
			"name": "Orders",
			"description": "",
			"order": [
				"371af762-2744-bb47-ed4f-c577a46b1e4d",
				"22e47b39-9217-31c8-3c21-e9e0ceca5723",
				"40b2b97a-2038-5b17-76bf-592172d9c7c3",
				"f2f179b7-9978-e30c-0160-15b75f03ab43",
				"c5a662a5-b746-ff37-e60d-adccb4f21bcc"
			],
			"owner": "38528"
		},
		{
			"id": "ea16c40f-98d8-f2c0-f88c-56f03f81a759",
			"name": "Reports",
			"description": "",
			"order": [
				"323ea092-f88e-cd30-8f01-f0e12e05666b",
				"a09cad42-aa8b-7964-afe3-c6ef051523c1"
			],
			"owner": "38528"
		},
		{
			"id": "e414a669-75dd-40be-e611-931d63c1cb67",
			"name": "Transfer Funds",
			"description": "",
			"order": [
				"f0dfa90e-ba48-e972-ae3b-3f93b319dc3b"
			],
			"owner": "38528"
		}
	],
	"timestamp": 1445537473761,
	"owner": "38528",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "02b1b837-325f-d180-12db-35bdca66ea9c",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products/{{product_id}}/candles?granularity=1000&start=2015-10-01&end=2015-10-02",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445731114655,
			"name": "Get historic rates",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "1b82868c-1fb9-5c82-5496-75e7ea87d071",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/accounts/{{account_id}}",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [
				{
					"key": "type",
					"value": "fills",
					"type": "text",
					"enabled": true
				},
				{
					"key": "start_date",
					"value": "2015-10-01 00:00:00",
					"type": "text",
					"enabled": true
				},
				{
					"key": "end_date",
					"value": "2015-10-02 23:59:59",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729123167,
			"name": "Get an account",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "22e47b39-9217-31c8-3c21-e9e0ceca5723",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/orders/{{order_id}}",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729697394,
			"name": "Cancel an order",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "3023474c-77e6-7c71-7f8a-ab8807860ec5",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products/{{product_id}}/stats",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730360492,
			"name": "Get 24hr stats",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "303b0bd6-a739-73bf-2413-d202d2c87bb6",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products/{{product_id}}/book?level=1",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730897801,
			"name": "Get product order book",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "323ea092-f88e-cd30-8f01-f0e12e05666b",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/reports",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// Set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// Get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// Put it all together and hash it into a signature\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445728691365,
			"name": "Create a Report",
			"description": "Create a new report",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": [],
			"rawModeData": "{\n  \"type\": \"fills\",\n  \"start_date\": \"2015-11-01 00:00:00\",\n  \"end_date\": \"2015-11-30 23:59:59\"\n}\n"
		},
		{
			"id": "34b6a7be-1624-899e-5bfb-4db64182c73d",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730086364,
			"name": "Get products",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "371af762-2744-bb47-ed4f-c577a46b1e4d",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/orders",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729460512,
			"name": "Place an new order",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": [],
			"rawModeData": "{\n    \"size\": \"0.01\",\n    \"price\": \"10000\",\n    \"side\": \"sell\",\n    \"product_id\": \"BTC-USD\"\n}"
		},
		{
			"id": "40b2b97a-2038-5b17-76bf-592172d9c7c3",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/orders",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729678367,
			"name": "Cancel all",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "5275b06d-b385-b1af-6495-26e8435c243c",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/fills?order_id=&product_id=",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730802360,
			"name": "List fills",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "5d466211-e2f7-2b1c-6c79-bdda4d835485",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products/{{product_id}}/trades",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730288897,
			"name": "Get trades",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "66ebb64e-c5d4-2b3f-057f-2278a11371a5",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/accounts/{{account_id}}/holds",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [
				{
					"key": "type",
					"value": "fills",
					"type": "text",
					"enabled": true
				},
				{
					"key": "start_date",
					"value": "2015-10-01 00:00:00",
					"type": "text",
					"enabled": true
				},
				{
					"key": "end_date",
					"value": "2015-10-02 23:59:59",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729163653,
			"name": "Get holds",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "a09cad42-aa8b-7964-afe3-c6ef051523c1",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/reports/{{report_id}}",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// Set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// Get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// Put it all together and hash it into a signature\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729985039,
			"name": "Get report status",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "bc711f61-3586-ac36-d1ed-313622f510d0",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/accounts",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [
				{
					"key": "type",
					"value": "fills",
					"type": "text",
					"enabled": true
				},
				{
					"key": "start_date",
					"value": "2015-10-01 00:00:00",
					"type": "text",
					"enabled": true
				},
				{
					"key": "end_date",
					"value": "2015-10-02 23:59:59",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445728411983,
			"name": "List accounts",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "c5a662a5-b746-ff37-e60d-adccb4f21bcc",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/orders/{{order_id}}",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729728783,
			"name": "Get an order",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "c75a75f3-5742-aacf-16f3-7d6859006080",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/currencies",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730370019,
			"name": "Get currencies",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "ec63e6dd-e1fe-cea7-b3ee-9d1ee8645e31",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/products/{{product_id}}/ticker",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730264257,
			"name": "Get product ticker",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "f0dfa90e-ba48-e972-ae3b-3f93b319dc3b",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/transfers",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729924909,
			"name": "Deposit/Withdraw",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": [],
			"rawModeData": "{\n    \"type\": \"deposit\",\n    \"amount\": \"10.32\",\n    \"coinbase_account_id\": \"b5344d81b42e65f81af9ceba\"\n}\n\n{\n    \"type\": \"withdraw\",\n    \"amount\": \"100.44\",\n    \"coinbase_account_id\": \"b5344d81b42e65f81af9ceba\"\n}"
		},
		{
			"id": "f2f179b7-9978-e30c-0160-15b75f03ab43",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/orders?type=all",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730644173,
			"name": "List orders",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "f53fd213-b9a2-4967-e754-724951027a4d",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/time",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445730377959,
			"name": "Get time",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		},
		{
			"id": "fc3a42d6-8158-b633-5f7f-f4b2eac1e83f",
			"headers": "CB-ACCESS-KEY: {{key}}\nCB-ACCESS-SIGN: {{sign}}\nCB-ACCESS-TIMESTAMP: {{timestamp}}\nCB-ACCESS-PASSPHRASE: {{passphrase}}\nContent-Type: application/json\n",
			"url": "{{url}}/accounts/{{account_id}}/ledger",
			"preRequestScript": "// Exchange-friendly timestamp format\nfunction epochTime() {\n    var d = new Date();\n    var t = d.getTime();\n    var o = t + \"\";\n    return o.substring(0, 10);\n}\n\n// Get values from the current environment\nvar key = environment[\"key\"];\nvar secret = environment[\"secret\"];\nvar passphrase = environment[\"passphrase\"];\n\n// set path, time, and decode the secret\nvar path = request.url.substr(7);\nvar timestamp = epochTime();\nvar decoded_secret = CryptoJS.enc.Base64.parse(secret);\n\n// get body if we have one\nvar body = \"\";\nif (request.data.length > 0) body = request.data;\n\n// hash it all together\nvar what = timestamp + request.method + path + body;\nvar hash = CryptoJS.HmacSHA256(what, decoded_secret);\nvar encoded_signature = hash.toString(CryptoJS.enc.Base64);\n\n// set requiered headers via environment variables\npostman.setEnvironmentVariable('key', key);\npostman.setEnvironmentVariable('timestamp', timestamp);\npostman.setEnvironmentVariable('sign', encoded_signature);\npostman.setEnvironmentVariable('passphrase', passphrase);",
			"pathVariables": {},
			"method": "GET",
			"data": [
				{
					"key": "type",
					"value": "fills",
					"type": "text",
					"enabled": true
				},
				{
					"key": "start_date",
					"value": "2015-10-01 00:00:00",
					"type": "text",
					"enabled": true
				},
				{
					"key": "end_date",
					"value": "2015-10-02 23:59:59",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1445729111112,
			"name": "Get account history",
			"description": "",
			"collectionId": "d4d362e9-70ab-46b0-9e9f-b5c4dddb681b",
			"responses": []
		}
	]
}